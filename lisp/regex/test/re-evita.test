;;;; -*- Mode: Lisp; Syntax: Common-Lisp; Package: CL-USER; Base: 10 -*-
;;; Regex test case regex-test-evita.txt from PCRE.
;;;
;;; This file is automatically generated from Perl's test data with
;;; Perl 5.008004 at 2004-05-20 16:02:27 UTC.
;;;
;;; See: http://www.perl.com/ for Perl.
;;;
;

; pattern	text	match-p	replacement	expect	comment
;; regex-test-evita.txt/2: a): Matched with 1 captures.
(test-case    ; Unmatched close-parenthesis
  "regex-test-evita.txt/2"
  "''"
  "a)"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/3: a]: Not mached.
(test-case
  "regex-test-evita.txt/3"
  "''''"
  "a]"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/4: a}: Not mached.
(test-case
  "regex-test-evita.txt/4"
  "''''''"
  "a}"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/5: |foo: Not mached.
(test-case
  "regex-test-evita.txt/5"
  "''''''''"
  "foo"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/6: foo|: Not mached.
(test-case
  "regex-test-evita.txt/6"
  "''''''''''"
  "foo"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/7: .*: Not mached.
(test-case
  "regex-test-evita.txt/7"
  "''''''''''''"
  ""
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/8: x: Not mached.
(test-case
  "regex-test-evita.txt/8"
  "''''''''''''''"
  "x"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/9: xyz: Not mached.
(test-case
  "regex-test-evita.txt/9"
  "''''''''''''''''"
  "xyz"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/10: xyz: Not mached.
(test-case
  "regex-test-evita.txt/10"
  "''''''''''''''''''"
  "<xyz>"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/11: [-]: Not mached.
(test-case
  "regex-test-evita.txt/11"
  "''''''''''''''''''''"
  "-"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/12: []]: Not mached.
(test-case
  "regex-test-evita.txt/12"
  "''''''''''''''''''''''"
  "]"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/13: []: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/13"
  "''''''''''''''''''''''''"
  "-"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/14: [a-c]: Not mached.
(test-case
  "regex-test-evita.txt/14"
  "''''''''''''''''''''''''''"
  "b"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/15: [a\-c]: Not mached.
(test-case
  "regex-test-evita.txt/15"
  "''''''''''''''''''''''''''''"
  "b"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/16: [a\]c]: Not mached.
(test-case
  "regex-test-evita.txt/16"
  "''''''''''''''''''''''''''''''"
  "]"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/17: a|b: Not mached.
(test-case
  "regex-test-evita.txt/17"
  "''''''''''''''''''''''''''''''''"
  "a"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/18: a|b: Not mached.
(test-case
  "regex-test-evita.txt/18"
  "''''''''''''''''''''''''''''''''''"
  "b"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/19: x{}: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/19"
  "''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/20: x{a}: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/20"
  "''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/21: x{,}: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/21"
  "''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/22: x{1,a}: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/22"
  "''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/23: x{3}: Not mached.
(test-case
  "regex-test-evita.txt/23"
  "''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/24: x{3,}: Not mached.
(test-case
  "regex-test-evita.txt/24"
  "''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/25: x{3,4}: Not mached.
(test-case
  "regex-test-evita.txt/25"
  "''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/26: x{}?: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/26"
  "''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/27: x{3}?: Not mached.
(test-case
  "regex-test-evita.txt/27"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/28: x{3,}?: Not mached.
(test-case
  "regex-test-evita.txt/28"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/29: x{3,4}?: Not mached.
(test-case
  "regex-test-evita.txt/29"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/30: [^ab]*: Not mached.
(test-case
  "regex-test-evita.txt/30"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "cde"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/31: (x){}: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/31"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/32: (x){a}: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/32"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/33: (x){,}: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/33"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/34: (x){1,a}: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/34"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/35: (x){3}: Not mached.
(test-case
  "regex-test-evita.txt/35"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/36: (x){3,}: Not mached.
(test-case
  "regex-test-evita.txt/36"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/37: (x){3,4}: Not mached.
(test-case
  "regex-test-evita.txt/37"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/38: (x){}?: Matched with 1 captures.
(test-case
  "regex-test-evita.txt/38"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  (list
    ""
    ""
    ""
    "" ))

;; regex-test-evita.txt/39: (x){3}?: Not mached.
(test-case
  "regex-test-evita.txt/39"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/40: (x){3,}?: Not mached.
(test-case
  "regex-test-evita.txt/40"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/41: (x){3,4}?: Not mached.
(test-case
  "regex-test-evita.txt/41"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "axxxxxb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/42: a*?x: Not mached.
(test-case
  "regex-test-evita.txt/42"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "aaax"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/43: `(.*)`: Not mached.
(test-case
  "regex-test-evita.txt/43"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "The `foo` is `bar`"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/44: `(.*)*`: Not mached.
(test-case
  "regex-test-evita.txt/44"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "The `foo` is `bar`"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/45: \bfoo\b(.*): Not mached.
(test-case
  "regex-test-evita.txt/45"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "foobar foo baz"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/46: foo(?=bar)(.*): Not mached.
(test-case
  "regex-test-evita.txt/46"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "foo foobar baz"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/47: foo(?!bar): Not mached.
(test-case
  "regex-test-evita.txt/47"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "foobaz foobar baz"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/48: \d+(?!\.): Not mached.
(test-case
  "regex-test-evita.txt/48"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "OH 44272"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/49: \d+(?=[^.]): Not mached.
(test-case
  "regex-test-evita.txt/49"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "OH 44272"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/50: ..XY: Not mached.
(test-case
  "regex-test-evita.txt/50"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abXY"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/51: (..)XY: Not mached.
(test-case
  "regex-test-evita.txt/51"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abXY"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/52: ((..)XY): Not mached.
(test-case
  "regex-test-evita.txt/52"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abXY"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/53: ..XY: Not mached.
(test-case
  "regex-test-evita.txt/53"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "xxabXY"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/54: (..)XY: Not mached.
(test-case
  "regex-test-evita.txt/54"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "xxabXY"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/55: ((..)XY): Not mached.
(test-case
  "regex-test-evita.txt/55"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "xxabXY"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/56: .*A.: Not mached.
(test-case
  "regex-test-evita.txt/56"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "aAa"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/57: <B[^>]*>.*</B>: Not mached.
(test-case
  "regex-test-evita.txt/57"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "FOO<B></B>BAR"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/58: ([^:]+):(/?.*/)([^/]+): Not mached.
(test-case
  "regex-test-evita.txt/58"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "www:/home.htm"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/59: ([^:]+):(/?.*/)([^/]+): Not mached.
(test-case
  "regex-test-evita.txt/59"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "www:/runonce/default.asp"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/60: http://([^.]+)\.jp\.msn\.com(/.*)?: Not mached.
(test-case
  "regex-test-evita.txt/60"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "http://www.jp.msn.com/foo.htm"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/61: http://([^.]+)\.jp\.msn\.com(/.*)?: Not mached.
(test-case
  "regex-test-evita.txt/61"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "http://www.jp.msn.com/"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/62: http://([^.]+)\.jp\.msn\.com(/.*)?: Not mached.
(test-case
  "regex-test-evita.txt/62"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "http://www.jp.msn.com"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/63: \S+\s+\S+: Not mached.
(test-case
  "regex-test-evita.txt/63"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "19990310   15438"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/64: (?:(a)|(b)|(c))+: Not mached.
(test-case
  "regex-test-evita.txt/64"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abca"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/65: (?:(a)|(b)|(c))+: Not mached.
(test-case
  "regex-test-evita.txt/65"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/66: (?:(a)|(b)|(c))+: Not mached.
(test-case
  "regex-test-evita.txt/66"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcc"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/67: (?:(a)(b))*x(): Not mached.
(test-case
  "regex-test-evita.txt/67"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "ababb x"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/68: (foo|bar|x\1)*: Not mached.
(test-case
  "regex-test-evita.txt/68"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "fooxfoo"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/69: (foo|bar|x\1)*: Not mached.
(test-case
  "regex-test-evita.txt/69"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "barxbar"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/70: (foo|bar|x\1)*: Not mached.
(test-case    ; match empty
  "regex-test-evita.txt/70"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "x"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/71: (foo|bar|x\1)+: Not mached.
(test-case
  "regex-test-evita.txt/71"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "x"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/72: ((a{0,5})*)*[c]: Not mached.
(test-case
  "regex-test-evita.txt/72"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "ac"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/73: (){0}(): Not mached.
(test-case
  "regex-test-evita.txt/73"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "x"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/74: ((){0}.)+(): Not mached.
(test-case
  "regex-test-evita.txt/74"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "x"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/75: \Q*foo*\E: Not mached.
(test-case
  "regex-test-evita.txt/75"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "foo *foo*"
  '(:single-line nil)
  nil)



; #####################################################################
; 
; stringfy
; c = char        s = string
; C = char/i      S = string/i
; 

;; regex-test-evita.txt/85: [a]b: Not mached.
(test-case    ; c+c
  "regex-test-evita.txt/85"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "ab"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/86: [a]bcd: Not mached.
(test-case    ; c+s
  "regex-test-evita.txt/86"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcd"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/87: [a]bcd[e]: Not mached.
(test-case    ; c+s+c
  "regex-test-evita.txt/87"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcde"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/88: [a]bcd[e][f]: Not mached.
(test-case    ; c+s+c+c
  "regex-test-evita.txt/88"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcdef"
  '(:single-line nil)
  nil)


;; regex-test-evita.txt/90: ab[c]: Not mached.
(test-case    ; s+c
  "regex-test-evita.txt/90"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abc"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/91: ab(?:cd): Not mached.
(test-case    ; s+s
  "regex-test-evita.txt/91"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcd"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/92: ab[c]de: Not mached.
(test-case    ; s+c+s
  "regex-test-evita.txt/92"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcde"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/93: ab(?i:cd): Not mached.
(test-case    ; s+S
  "regex-test-evita.txt/93"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abCD"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/94: ab(?i:12): Not mached.
(test-case    ; s+s
  "regex-test-evita.txt/94"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "ab12"
  '(:single-line nil)
  nil)


;; regex-test-evita.txt/96: (?i)[a]b: Not mached.
(test-case    ; C+C
  "regex-test-evita.txt/96"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "ab"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/97: (?i)[a]bcd: Not mached.
(test-case    ; C+S
  "regex-test-evita.txt/97"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcd"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/98: (?i)[a]bcd[e]: Not mached.
(test-case    ; C+S+C
  "regex-test-evita.txt/98"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcde"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/99: (?i)[a]bcd[e][f]: Not mached.
(test-case    ; C+S+C+C
  "regex-test-evita.txt/99"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcdef"
  '(:single-line nil)
  nil)


;; regex-test-evita.txt/101: (?i)[a]1: Not mached.
(test-case    ; C+c
  "regex-test-evita.txt/101"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "a1"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/102: (?i)[a]123: Not mached.
(test-case    ; C+s
  "regex-test-evita.txt/102"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "a123"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/103: (?i)[a]123[e]: Not mached.
(test-case    ; C+s+C
  "regex-test-evita.txt/103"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "a123e"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/104: (?i)[a]123[e][f]: Not mached.
(test-case    ; C+s+C+C
  "regex-test-evita.txt/104"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "a123ef"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/105: (?i)[a]123[e][f]4: Not mached.
(test-case    ; C+s+C+C+c
  "regex-test-evita.txt/105"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "a123ef4"
  '(:single-line nil)
  nil)


;; regex-test-evita.txt/107: (?i)[a][*]b: Not mached.
(test-case    ; C+c+c
  "regex-test-evita.txt/107"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "a*b"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/108: (?i)[a][*]bcd: Not mached.
(test-case    ; C+c+s
  "regex-test-evita.txt/108"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "a*bcd"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/109: (?i)[a][*]bcd[e]: Not mached.
(test-case    ; C+c+S+C
  "regex-test-evita.txt/109"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "a*bcde"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/110: (?i)[a][*]bcd[e][f]: Not mached.
(test-case    ; C+c+S+C
  "regex-test-evita.txt/110"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "a*bcdef"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/111: (?i)[a][*]bcd[e]4: Not mached.
(test-case    ; C+c+S+c
  "regex-test-evita.txt/111"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "a*bcde4"
  '(:single-line nil)
  nil)


;; regex-test-evita.txt/113: (?i)ab[c]: Not mached.
(test-case    ; S+C
  "regex-test-evita.txt/113"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abc"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/114: (?i)ab(?:cd): Not mached.
(test-case    ; S+S
  "regex-test-evita.txt/114"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcd"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/115: (?i)ab[c]de: Not mached.
(test-case    ; S+C+S
  "regex-test-evita.txt/115"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abcde"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/116: (?i)ab(?i:cd): Not mached.
(test-case    ; S+S
  "regex-test-evita.txt/116"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abCD"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/117: (?i)ab(?:12): Not mached.
(test-case    ; S+s
  "regex-test-evita.txt/117"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "ab12"
  '(:single-line nil)
  nil)


; Lookbehind with arbitrary regex
;; regex-test-evita.txt/120: (?<=(A |The |Mr[.]))Foo: Not mached.
(test-case
  "regex-test-evita.txt/120"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "Foo, A Foo, Mr.Foo"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/121: a(.{3,}?)b: Not mached.
(test-case
  "regex-test-evita.txt/121"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "aHxyb"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/122: ^(b+?|a){1,2}?c: Not mached.
(test-case
  "regex-test-evita.txt/122"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "bbbc"
  '(:single-line nil)
  nil)

;; regex-test-evita.txt/123: ^(b+?|a){1,2}?c: Not mached.
(test-case
  "regex-test-evita.txt/123"
  "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
  "abbbbbbbbbbbc"
  '(:single-line nil)
  nil)

; EOF
