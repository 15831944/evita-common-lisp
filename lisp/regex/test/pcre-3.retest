;;;; -*- Mode: Lisp; Syntax: Common-Lisp; Package: CL-USER; Base: 10 -*-
;;; Regex test case testinput3 from PCRE.
;;;
;;; This file is automatically generated from PCRE's test data with
;;; Perl 5.008004 at 2004-05-24 17:48:50 UTC.
;;;
;;; See: http://www.pcre.org/ for PCRE, Perl Compatible Regex.
;;;
;

;;;; testinput3/2: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/2"
  "^[\\w]+"
  "*** Failers"
  '(:single-line nil)
  nil
 )

;;;; testinput3/3: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/3"
  "^[\\w]+"
  (backslash "\\u00C9cole")
  '(:single-line nil)
  nil
 )

;;;; testinput3/6: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/6"
  "^[\\w]+"
  (backslash "\\u00C9cole")
  '(:single-line nil)
  nil
 )

;;;; testinput3/9: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/9"
  "^[\\w]+"
  "*** Failers"
  '(:single-line nil)
  nil
 )

;;;; testinput3/10: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/10"
  "^[\\w]+"
  (backslash "\\u00C9cole")
  '(:single-line nil)
  nil
 )

;;;; testinput3/13: 
;;;
;;;    Matched
;
(test-case
  "pcre-3/13"
  "^[\\W]+"
  (backslash "\\u00C9cole")
  '(:single-line nil)
  (list (backslash "\\u00C9")) )

;;;; testinput3/16: 
;;;
;;;    Matched
;
(test-case
  "pcre-3/16"
  "^[\\W]+"
  "*** Failers"
  '(:single-line nil)
  (list "*** ") )

;;;; testinput3/17: 
;;;
;;;    Matched
;
(test-case
  "pcre-3/17"
  "^[\\W]+"
  (backslash "\\u00C9cole")
  '(:single-line nil)
  (list (backslash "\\u00C9")) )

;;;; testinput3/20: 
;;;
;;;    Matched
;
(test-case
  "pcre-3/20"
  "[\\b]"
  (backslash "\\u0008")
  '(:single-line nil)
  (list (backslash "\\u0008")) )

;;;; testinput3/21: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/21"
  "[\\b]"
  "*** Failers"
  '(:single-line nil)
  nil
 )

;;;; testinput3/22: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/22"
  "[\\b]"
  "a"
  '(:single-line nil)
  nil
 )

;;;; testinput3/25: 
;;;
;;;    Matched
;
(test-case
  "pcre-3/25"
  "[\\b]"
  (backslash "\\u0008")
  '(:single-line nil)
  (list (backslash "\\u0008")) )

;;;; testinput3/26: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/26"
  "[\\b]"
  "*** Failers"
  '(:single-line nil)
  nil
 )

;;;; testinput3/27: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/27"
  "[\\b]"
  "a"
  '(:single-line nil)
  nil
 )

;;;; testinput3/30: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/30"
  "^\\w+"
  "*** Failers"
  '(:single-line nil)
  nil
 )

;;;; testinput3/31: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/31"
  "^\\w+"
  (backslash "\\u00C9cole")
  '(:single-line nil)
  nil
 )

;;;; testinput3/34: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/34"
  "^\\w+"
  (backslash "\\u00C9cole")
  '(:single-line nil)
  nil
 )

;;;; testinput3/37: 
;;;
;;;    Matched with 2 captures.
;
(test-case
  "pcre-3/37"
  "(.+)\\b(.+)"
  (backslash "\\u00C9cole")
  '(:single-line nil)
  (list
    (backslash "\\u00C9cole")
    (backslash "\\u00C9")
    "cole" ) )

;;;; testinput3/40: 
;;;
;;;    Matched with 2 captures.
;
(test-case
  "pcre-3/40"
  "(.+)\\b(.+)"
  "*** Failers"
  '(:single-line nil)
  (list
    "*** Failers"
    "*** "
    "Failers" ) )

;;;; testinput3/41: 
;;;
;;;    Matched with 2 captures.
;
(test-case
  "pcre-3/41"
  "(.+)\\b(.+)"
  (backslash "\\u00C9cole")
  '(:single-line nil)
  (list
    (backslash "\\u00C9cole")
    (backslash "\\u00C9")
    "cole" ) )

;;;; testinput3/44: 
;;;
;;;    Matched
;
(test-case
  "pcre-3/44"
  (backslash "\\u00C9cole")
  (backslash "\\u00C9cole")
  '(:ignore-case t :single-line nil)
  (list (backslash "\\u00C9cole")) )

;;;; testinput3/45: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/45"
  (backslash "\\u00C9cole")
  "*** Failers"
  '(:ignore-case t :single-line nil)
  nil
 )

;;;; testinput3/46: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/46"
  (backslash "\\u00C9cole")
  (backslash "\\u00E9cole")
  '(:ignore-case t :single-line nil)
  nil
 )

;;;; testinput3/49: 
;;;
;;;    Matched
;
(test-case
  "pcre-3/49"
  (backslash "\\u00C9cole")
  (backslash "\\u00C9cole")
  '(:ignore-case t :single-line nil)
  (list (backslash "\\u00C9cole")) )

;;;; testinput3/50: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/50"
  (backslash "\\u00C9cole")
  (backslash "\\u00E9cole")
  '(:ignore-case t :single-line nil)
  nil
 )

;;;; testinput3/57: 
;;;
;;;    Matched
;
(test-case
  "pcre-3/57"
  "^[\\xc8-\\xc9]"
  (backslash "\\u00C9cole")
  '(:ignore-case t :single-line nil)
  (list (backslash "\\u00C9")) )

;;;; testinput3/58: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/58"
  "^[\\xc8-\\xc9]"
  (backslash "\\u00E9cole")
  '(:ignore-case t :single-line nil)
  nil
 )

;;;; testinput3/61: 
;;;
;;;    Matched
;
(test-case
  "pcre-3/61"
  "^[\\xc8-\\xc9]"
  (backslash "\\u00C9cole")
  '(:single-line nil)
  (list (backslash "\\u00C9")) )

;;;; testinput3/62: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/62"
  "^[\\xc8-\\xc9]"
  "*** Failers"
  '(:single-line nil)
  nil
 )

;;;; testinput3/63: 
;;;
;;;    Not matched
;
(test-case
  "pcre-3/63"
  "^[\\xc8-\\xc9]"
  (backslash "\\u00E9cole")
  '(:single-line nil)
  nil
 )

; EOF
